
function initMap(latitude, longitude, paramGeos, group, price, minstay, accomodate,roomtype) {
	zIndex = paramGeos.length;
	var geometry = {
		lat: latitude,
		lng: longitude
	};
	var map = new google.maps.Map(document.getElementById('map'), {
		center: geometry,
		zoom: 12
	});
	var roomtypes = roomtype;
	var groups = group;
	var geos = paramGeos;
	var prices = price;
	var minstays = minstay;
	var accomodates = accomodate;

	setMarkers(map, geos, groups, prices, minstays, accomodates,roomtypes);
	
	var pinIcon = new google.maps.MarkerImage(
		      "image/mainmarker.png",
		      null, /* size is determined at runtime */
		      null, /* origin is 0,0 */
		      null, /* anchor is bottom center of the scaled image */
		      new google.maps.Size(60, 60));
	
	 var marker = new google.maps.Marker({
	      position: geometry,
	      map: map,
	      title: 'hello',
	      zIndex: zIndex,
	      icon: pinIcon,

	   });
	 codeAddress()
}
	 function codeAddress() {
		    var geocoder = new google.maps.Geocoder();
		    var address = document.getElementById('address').value;
		    geocoder.geocode( { 'address': "서울역"}, function(results, status) {
		      if (status == "OK") {
		        map.setCenter(results[0].geometry.location);
		        var marker = new google.maps.Marker({
		            map: map,
		            position: results[0].geometry.location
		        });
		        //return value;
		      } else {
		        alert('Geocode was not successful for the following reason: ' + status);
		      }
		    });
		    alert(""+results[0].geometry.location);
		  }


function numberFormat(inputNumber) {
	   return inputNumber.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
	}

function setMarkers(map, geos, groups, prices, minstays, accomodates,roomtypes) {
	
	var icons = {
		group_1: {
			icon: 'image/marker1.png',
		},
		group_2: {
			icon: 'image/marker2.png',
		},
		group_3: {
			icon: 'image/marker3.png',
		}
	};


	for (var i = 0; i < geos.length; i++) {
		var geo = geos[i];
		var roomtype = roomtypes[i]
		var group = groups[i];
		var price = prices[i];
		var minstay = minstays[i];
		var accomodate = accomodates[i];
		var marker = new google.maps.Marker({
			position: {
				lat: geo[0],
				lng: geo[1]
			},
			map: map,
			title: "  ㆍPrice : $" + numberFormat(price) + "\nㆍMinstay : "+ minstay +"\nㆍAccomodate : "+accomodate +"\nㆍRoomtype : " + roomtype,
			icon: icons[group].icon
		});
	}
}