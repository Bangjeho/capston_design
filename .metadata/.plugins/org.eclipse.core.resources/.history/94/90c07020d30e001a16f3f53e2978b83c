package kr.ac.sunmoon.client;

import com.google.gwt.core.client.EntryPoint;
import com.google.gwt.core.client.GWT;
import com.google.gwt.user.client.rpc.AsyncCallback;
import com.google.gwt.user.client.ui.HTML;  
import com.gwtext.client.core.Margins;  
import com.gwtext.client.core.RegionPosition;  
import com.gwtext.client.widgets.*;  
import com.gwtext.client.widgets.grid.PropertyGridPanel;  
import com.gwtext.client.widgets.layout.AccordionLayout;  
import com.gwtext.client.widgets.layout.BorderLayout;  
import com.gwtext.client.widgets.layout.BorderLayoutData;  
import com.gwtext.client.widgets.layout.FitLayout;

import kr.ac.sunmoon.shared.RoomInfo;

import java.util.ArrayList;
import java.util.Date;  
import java.util.HashMap;  
import java.util.Map;

/**
 * Entry point classes define <code>onModuleLoad()</code>.
 */
public class AirBnB implements EntryPoint 
{
	private native void initMapFromGWT(double[][] paramGeos, String[] group,
			 int[] price, int[] minstay, int[] accomodate, String[] roomtype, double lat, double lng, double predict, int check)
	   /*-{
	      $wnd.initMap(paramGeos, group, price, minstay, accomodate,roomtype,lat,lng,predict,check);
	   }-*/;
	public void onModuleLoad() {  
        Panel panel = new Panel();  
        panel.setBorder(false);  
        panel.setPaddings(15);  
        panel.setLayout(new FitLayout());  
  
        Panel borderPanel = new Panel();  
        borderPanel.setLayout(new BorderLayout());    
  
        //add east panel  
        Panel eastPanel = new Panel();  
        eastPanel.setTitle("East Side");  
        eastPanel.setCollapsible(true);  
        eastPanel.setWidth(225);  
        eastPanel.setLayout(new FitLayout());  
  
        BorderLayoutData eastData = new BorderLayoutData(RegionPosition.EAST);  
        eastData.setSplit(true);  
        eastData.setMinSize(175);  
        eastData.setMaxSize(400);  
        eastData.setMargins(new Margins(0, 0, 5, 0));  
  
        borderPanel.add(eastPanel, eastData);  
  
        TabPanel tabPanel = new TabPanel();  
        tabPanel.setBorder(false);  
        tabPanel.setActiveTab(1);  
  
        Panel tabOne = new Panel();  
//        tabOne.setHtml("<p>A TabPanel component can be a region.</p>");  
        tabOne.setTitle("A Tab");  
        tabOne.setAutoScroll(true);  
        tabPanel.add(tabOne);    
        eastPanel.add(tabPanel);
        ServiceAsync service = GWT.create(Service.class);
        service.getRoomInfo(new AsyncCallback<ArrayList<RoomInfo>>() {
			
			@Override
			public void onSuccess(ArrayList<RoomInfo> result) {
				// TODO Auto-generated method stub
				String room;
				final String[] group = new String[result.size()];
				final int[] accomodate = new int[result.size()];
				final int[] minstay = new int[result.size()];
				final int[] price = new int[result.size()];
				final String[] roomtype = new String[result.size()];
				final double[][] paramGeos = new double[result.size()][];
				
				for(int i=0; i<paramGeos.length; i++)
				{
					if(result.get(i).isApt()){
						boolean apt = result.get(i).isApt();
						room = String.valueOf(apt);
						room = room.replace(room, "Entire home/apt");
						roomtype[i] = room;
					}
					else if(result.get(i).isPrivate()){
						
						boolean privat = result.get(i).isPrivate();
						room = String.valueOf(privat);
						room = room.replace(room, "Private room");
						roomtype[i] = room;
					}							
					else if(result.get(i).isShared()){
						boolean share = result.get(i).isShared();
						room = String.valueOf(share);
						room = room.replace(room, "Shared room");
						roomtype[i] = room;
					}
					
					accomodate[i] = result.get(i).getAccommodates();
					minstay[i] = result.get(i).getMinstay();
					price[i] = result.get(i).getPrice();
					group[i] = result.get(i).getGroup();
					paramGeos[i] = new double[2];
					paramGeos[i][0] = result.get(i).getLatitude();
					paramGeos[i][1] = result.get(i).getLongitude();
				}
				initMapFromGWT(paramGeos, group, price, minstay, accomodate, roomtype, 0, 0, 0, 0);
			}
			
			@Override
			public void onFailure(Throwable caught) {
				// TODO Auto-generated method stub
				
			}
		});
        HTML html = new HTML("<div id='map' style ='width :100%;height:500px;'></div>");
        Button btn = new Button("222");
        tabOne.add(btn);
  
        TabPanel centerPanel = new TabPanel();  
        centerPanel.setDeferredRender(false);  
        centerPanel.setActiveTab(0);  
  
        Panel centerPanelOne = new HTMLPanel();  
        centerPanelOne.setTitle("Close Me");  
        centerPanelOne.setAutoScroll(true);  
        centerPanelOne.setClosable(true);  
        centerPanelOne.add(html);
        centerPanel.add(centerPanelOne);
        Panel centerPanelTwo = new HTMLPanel();  
        centerPanelTwo.setHtml(  
                "<p>My closable attribute is set to false so you can't close me. The other center panels " +  
                        "can be closed.</p>\n" +  
                        "<p>The center panel automatically grows to fit the remaining space in the container " +  
                        "that isn't taken up by the border regions.</p>\n" +  
                        "<hr>\n" +  
                        "<p>" + getShortBogusMarkup() + "</p>\n" +  
                        "<p>" + getShortBogusMarkup() + "</p>\n" +  
                        "<p>" + getShortBogusMarkup() + "</p>\n" +  
                        "<p>" + getShortBogusMarkup() + "</p>\n");  
        centerPanelTwo.setTitle("Center Panel");  
        centerPanelTwo.setAutoScroll(true);  
  
        centerPanel.add(centerPanelTwo);  
        borderPanel.add(centerPanel, new BorderLayoutData(RegionPosition.CENTER));  
  
        panel.add(borderPanel);  
  
        new Viewport(panel);  
    }  
  
    private static String getShortBogusMarkup() {  
        return "<p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. " +  
                "Sed metus nibh, sodales a, porta at, vulputate eget, dui.  " +  
                "In pellentesque nisl non sem. Suspendisse nunc sem, pretium eget, " +  
                "cursus a, fringilla vel, urna.";  
    }  
}
